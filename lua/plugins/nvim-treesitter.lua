return {
  {
    "nvim-treesitter/nvim-treesitter",
    version = false,
    build = ":TSUpdate",
    opts = {
      ensure_installed = {
        "apex",
        "arduino",
        "asm",
        "astro",
        "bash",
        "bibtex",
        "brightscript",
        "c",
        "c_sharp",
        "caddy",
        "clojure",
        "cmake",
        "comment",
        "commonlisp",
        "cpp",
        "css",
        "csv",
        "cue",
        "d",
        "dart",
        "desktop",
        "dhall",
        "diff",
        "disassembly",
        "dockerfile",
        "dot",
        "doxygen",
        "earthfile",
        "ebnf",
        "editorconfig",
        "elixir",
        "elm",
        "erlang",
        "fish",
        "fortran",
        "fsharp",
        "gdscript",
        "gdshader",
        "git_config",
        "git_rebase",
        "gitattributes",
        "gitcommit",
        "gitignore",
        "glsl",
        "gnuplot",
        "go",
        "gomod",
        "gosum",
        "gotmpl",
        "gowork",
        "gpg",
        "graphql",
        "groovy",
        "haskell",
        "hcl",
        "helm",
        "hlsl",
        "html",
        "htmldjango",
        "http",
        "hurl",
        "hyprlang",
        "ini",
        "java",
        "javascript",
        "jq",
        "jsdoc",
        "json",
        "json5",
        "jsonc",
        "jsonnet",
        "julia",
        "just",
        "kotlin",
        "latex",
        "linkerscript",
        "liquid",
        "llvm",
        "lua",
        "luadoc",
        "luap",
        "m68k",
        "make",
        "markdown",
        "markdown_inline",
        "matlab",
        "mermaid",
        "meson",
        "muttrc",
        "nasm",
        "nginx",
        "ninja",
        "nix",
        "objc",
        "objdump",
        "ocaml",
        "ocaml_interface",
        "odin",
        "pascal",
        "passwd",
        "pem",
        "perl",
        "php",
        "phpdoc",
        "po",
        "powershell",
        "printf",
        "prisma",
        "prolog",
        "promql",
        "properties",
        "proto",
        "psv",
        "pug",
        "puppet",
        "pymanifest",
        "python",
        "ql",
        "qmldir",
        "qmljs",
        "query",
        "r",
        "rbs",
        "readline",
        "regex",
        "rego",
        "requirements",
        "robots",
        "ron",
        "rst",
        "ruby",
        "rust",
        "scala",
        "scheme",
        "scss",
        "sflog",
        "slim",
        "smithy",
        "sql",
        "squirrel",
        "ssh_config",
        "strace",
        "surface",
        "svelte",
        "swift",
        "tablegen",
        "teal",
        "templ",
        "tera",
        "terraform",
        "tmux",
        "todotxt",
        "toml",
        "tsv",
        "tsx",
        "twig",
        "typescript",
        "typst",
        "v",
        "vala",
        "verilog",
        "vhdl",
        "vhs",
        "vim",
        "vimdoc",
        "vue",
        "wing",
        "xml",
        "yaml",
        "yuck",
        "zig",
      },
      highlight = {
        enable = true,
      },
      indent = {
        enable = true,
      },
      incremental_selection = {
        enable = true,
        keymaps = {
          init_selection = "<C-space>",
          node_incremental = "<C-space>",
          scope_incremental = false,
          node_decremental = "<bs>",
        },
      },
      textobjects = {
        move = {
          enable = true,
          goto_next_start = { ["]f"] = "@function.outer", ["]c"] = "@class.outer" },
          goto_next_end = { ["]F"] = "@function.outer", ["]C"] = "@class.outer" },
          goto_previous_start = { ["[f"] = "@function.outer", ["[c"] = "@class.outer" },
          goto_previous_end = { ["[F"] = "@function.outer", ["[C"] = "@class.outer" },
        },
      },
    },
    config = function(_, opts)
      require('nvim-treesitter.install').prefer_git = true
      ---@diagnostic disable-next-line: missing-fields
      require('nvim-treesitter.configs').setup(opts)
    end,
    legendary = {
      commands = {
        {
          ":TSInstall <language>",
          description = "Install Treesitter parser for <language>",
          unfinished = true,
        },
        {
          ":TSInstallInfo",
          description = "Print available languages and their installation status.",
        },
        {
          ":TSUpdate <language>",
          description = "Update parser for <language> or 'all'.",
          unfinished = true,
        },
      },
    },
  },
}
